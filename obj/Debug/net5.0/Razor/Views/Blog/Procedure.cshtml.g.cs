#pragma checksum "C:\Users\paul-\Documents\Ynov\Blog\Views\Blog\Procedure.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7b6bdff1bcefebaf1623a09ad86a8f4fd28b1a49"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Blog_Procedure), @"mvc.1.0.view", @"/Views/Blog/Procedure.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\paul-\Documents\Ynov\Blog\Views\_ViewImports.cshtml"
using Blog;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\paul-\Documents\Ynov\Blog\Views\_ViewImports.cshtml"
using Blog.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7b6bdff1bcefebaf1623a09ad86a8f4fd28b1a49", @"/Views/Blog/Procedure.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"60de8826b8954e9153bb5ddebbd8520bddd0a921", @"/Views/_ViewImports.cshtml")]
    public class Views_Blog_Procedure : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-area", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Blog", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Articles", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn btn__art"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""paragraph-div"">
    <h1 class=""paragraph__title"">Déroulement du Stage</h1>
    <p class=""paragraph"">
        Comme détaillé plus tôt dans les missions, nous avons dû développer un chatbot conversationnel, voici le détail
        de chaque étape du développement.
    </p>
    <p class=""paragraph"">
        Tout d'abord, nous avons fait une étude de l'existant, il nous fallait savoir ce qui existait et comment les
        bots existants fonctionnaient pour pouvoir s'inspirer et utiliser les bonnes technologies. Par exemple, le bot
        <a href=""https://www.cleverbot.com"">Cleverbot</a> qui se spécialise dans le fait de donner une réponse qui fait
        (presque) toujours sens.
    </p>
    <p class=""paragraph"">
        Une fois l'étude de l'existant réalisée, nous devions comparer les technologies existantes et à notre
        disposition pour pouvoir utiliser celle qui correspondait le mieux à notre besoin. Nous devions donc choisir si
        nous allions développer notre bot à p");
            WriteLiteral(@"artir de 0, ou en utilisant un framework. Suite à nos recherches, nous
        avons donc demandé l'avis de François-Xavier, et suite à celle-ci, nous avons choisi de partir sur un framework.
        Certains des meilleurs que nous avons eu l'occasion de voir étaient le framework de Facebook, <a
            href=""https://wit.ai/"">wit.ai</a>, celui de microsoft <a href=""https://dev.botframework.com/"">MS bot
            framework</a> et enfin, celui que nous avons personnellement utililsé, celui de Google, <a
            href=""https://dialogflow.cloud.google.com/"">Dialogflow</a>.
    </p>
    <p class=""paragraph"">
        Suite à cela, il nous fallait une oeuvre avec laquelle discuter, une oeuvre qui pourrait prêter sa personnalité
        à
        notre robot et aurait des choses à raconter. Nous avons donc avec Paul et François-Xavier, choisi d'utiliser <a
            href=""https://www.kazoart.com/blog/loeuvre-a-la-loupe-rage-the-flower-thrower-de-banksy/"">Rage, the Flower
            thrower</a>");
            WriteLiteral(@" par <a href=""https://fr.wikipedia.org/wiki/Banksy"">Banksy</a>.
    </p>
    <p class=""paragraph"">
        Enfin, il ne nous restait qu'à créer nos questions et réponses et utiliser au mieux Dialogflow afin de créer
        l'illusion d'une veritable conversation. L'utilisation principale de Dialogflow est la création de bots
        commerciaux, qui ne sont donc absolument pas faits pour tenir une conversation. Par conséquent, il nous a fallu
        jouer avec les outils que Dialogflow nous mettait à disposition, c'est à dire, orienter la conversation dans le
        sens qui NOUS arrangeait. Nous avons ensuite ajouté via Javascript la possibilité pour le bot de garder dans une
        base de données les réponses à certaines questions dans le but de les réutiliser en fin de conversation afin de
        donner un but à l'utilisateur.
    </p>
    <p class=""paragraph"">
        En définitive, il n'a certes pas été possible d'implémenter toutes les fonctions que nous voulions, toutefois,
        l");
            WriteLiteral("e résultat est assez proche de ce que le produit final pourrait être avec plus de temps et de moyens.\r\n    </p>\r\n</div>\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7b6bdff1bcefebaf1623a09ad86a8f4fd28b1a497586", async() => {
                WriteLiteral("Retour");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Area = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
